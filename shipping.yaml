- name: install shipping component
  hosts: shipping
  become: true
  tasks: 
  -  name: intall maven
     ansible.builtin.yum:
      name: maven
      state: installed
  -  name: check user is present or not
     ansible.builtin.command: id roboshop
      register: out
      ignore_errors: true

  -  when: out.rc != 0
      name: create user roboshop
      become: yes
      ansible.builtin.user: 
       name: roboshop

  -  name: check /app directory is present or not
     ansible.builtin.stat: 
       path: /app
      register: output
      ignore_errors: true

  -  when: output.stat.exists == False
      ansible.builtin.file:
       path: /app
       state: directory
  -  name: download shipping artifact
     ansible.builtin.get_url: 
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp

  -  name: extract shipping artifact
     ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes
  -  name: maven package
     ansible.builtin.command: mvn clean package
     args: 
       chdir: /app

  -  name: rename jar file
     ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
     args: 
      chdir: /app

  -  name: copy shipping service
     ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  -  name: daemon reload
     ansible.builtin.systemd:
      daemon_reload: true

  -  name: restart shipping
     ansible.builtin.service:
       name: shipping
       state: restarted
       enabled: true
  -  name: intall mysql client
     ansible.builtin.yum:
      name: mysql
      state: installed

  -  name: load schema
     ansible.builtin.command:

